version: '3.8'

services:
  # 应用服务
  app:
    build: .
    container_name: knowledge-base-platform
    ports:
      - "3000:3000"
    environment:
      # 应用配置
      - VITE_APP_TITLE=知识库处理平台
      - VITE_APP_LOGO=/logo.png
      
      # 数据库配置
      - DATABASE_URL=mysql://knowledge_user:knowledge_pass@db:3306/knowledge_base
      
      # JWT密钥
      - JWT_SECRET=${JWT_SECRET:-change-this-secret-key-in-production}
      
      # S3存储配置
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_REGION=${S3_REGION:-us-east-1}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_BUCKET=${S3_BUCKET:-knowledge-base-files}
      
      # LLM API配置
      - LLM_API_URL=${LLM_API_URL:-https://api.openai.com/v1}
      - LLM_API_KEY=${LLM_API_KEY}
      - LLM_MODEL=${LLM_MODEL:-gpt-4o}
      
      # 管理员配置
      - OWNER_OPEN_ID=${OWNER_OPEN_ID:-admin}
      - OWNER_NAME=${OWNER_NAME:-管理员}
      
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - knowledge-base-network

  # MySQL数据库
  db:
    image: mysql:8.0
    container_name: knowledge-base-db
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootpassword}
      - MYSQL_DATABASE=knowledge_base
      - MYSQL_USER=knowledge_user
      - MYSQL_PASSWORD=knowledge_pass
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: unless-stopped
    networks:
      - knowledge-base-network

  # MinIO对象存储（可选，如果没有外部S3服务）
  minio:
    image: minio/minio:latest
    container_name: knowledge-base-minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: unless-stopped
    networks:
      - knowledge-base-network
    profiles:
      - with-minio

  # Redis缓存（可选）
  redis:
    image: redis:7-alpine
    container_name: knowledge-base-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - knowledge-base-network
    profiles:
      - with-redis

volumes:
  mysql_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local

networks:
  knowledge-base-network:
    driver: bridge

